# EMQX Configuration for Kubernetes Homelab
# EMQX is a scalable MQTT broker with a built-in dashboard

# Replica configuration
replicaCount: 1

# Image configuration
image:
  repository: emqx/emqx
  tag: "5.5.0"
  pullPolicy: IfNotPresent

# Service configuration
service:
  type: LoadBalancer  # Uses MetalLB to get a dedicated IP
  annotations:
    metallb.universe.tf/allow-shared-ip: emqx  # Share IP across services if needed
  # Port configuration (integers, not objects)
  mqtt: 1883          # MQTT port
  ws: 8083            # WebSocket port
  dashboard: 18083    # Dashboard port
  # SSL/TLS ports disabled for now - will configure later
  # mqttssl: 8883       # MQTT over SSL/TLS (SECURE - use this for external)
  # wss: 8084           # WebSocket over SSL/TLS

# Persistence for EMQX data
persistence:
  enabled: true
  storageClass: "longhorn"
  accessMode: ReadWriteOnce
  size: 5Gi

# Resource limits
resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 1000m
    memory: 1Gi

# EMQX Configuration (using HOCON format for EMQX 5.x)
emqxConfig:
  EMQX_NAME: emqx
  EMQX_CLUSTER__DISCOVERY_STRATEGY: dns
  EMQX_CLUSTER__DNS__NAME: "emqx-headless.emqx.svc.cluster.local"
  EMQX_CLUSTER__DNS__RECORD_TYPE: srv
  # Disable SSL/TLS listeners for now
  EMQX_LISTENERS__SSL__DEFAULT__ENABLE: "false"
  EMQX_LISTENERS__WSS__DEFAULT__ENABLE: "false"

# Environment variables from secrets
envFrom:
  - secretRef:
      name: emqx-credentials

# Additional environment variables for dashboard auth
env:
  - name: EMQX_DASHBOARD__DEFAULT_USERNAME
    valueFrom:
      secretKeyRef:
        name: emqx-credentials
        key: dashboard_username
  - name: EMQX_DASHBOARD__DEFAULT_PASSWORD
    valueFrom:
      secretKeyRef:
        name: emqx-credentials
        key: dashboard_password

# Security Context
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Pod Security Context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Affinity - optional, uncomment to pin to specific node like your other apps
# affinity:
#   nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#         - matchExpressions:
#             - key: kubernetes.io/hostname
#               operator: In
#               values:
#                 - beelink

# Metrics for Prometheus (optional - you have kube-prometheus-stack)
metrics:
  enabled: true
  type: prometheus

# Ingress configuration for Tailscale Funnel
ingress:
  dashboard:
    enabled: true
    ingressClassName: tailscale
    annotations:
      tailscale.com/funnel: "true"
    path: /
    pathType: Prefix
    hosts:
      - emqx
    tls:
      - hosts:
          - emqx

# Volume mounts for TLS certificates (for future MQTTS support)
extraVolumes:
  - name: emqx-tls
    secret:
      secretName: emqx-tls-secret

extraVolumeMounts:
  - name: emqx-tls
    mountPath: /opt/emqx/etc/certs
    readOnly: true

