# Number of replicas for the deployment
replicaCount: 1

# Image settings
image:
  repository: ghcr.io/home-assistant/home-assistant
  pullPolicy: IfNotPresent
  tag: stable

# Service configuration
service:
  type: LoadBalancer
  port: 80
  annotations:
    tailscale.com/funnel: "true"

# Ingress configuration
ingress:
  enabled: true
  className: tailscale
  annotations:
    tailscale.com/funnel: "true"
  rules:
    - host: home-assistant
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: home-assistant
                port:
                  number: 80
  tls:
    - hosts:
        - home-assistant

# Node affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - beelink

# Environment variables
env:
  - name: TZ
    value: Europe/Madrid

# Persistence configuration
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 5Gi
  storageClass: longhorn
  existingVolume: ""
  matchLabels: {}
  matchExpressions: {}

# Liveness and readiness probes
livenessProbe:
  httpGet:
    path: /
    port: 8123
    scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /
    port: 8123
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 5


# Configuration for Home Assistant
configuration:
  enabled: true
  trusted_proxies:
    - 127.0.0.0/8     # Localhost
    - 10.42.0.0/16    # K8s Pod Network
    - 10.43.0.0/16    # K8s Services Network
    - 100.64.0.0/10   # Tailscale IPv4 Range
    - 192.168.0.0/16
  templateConfig: |-
    http:
      use_x_forwarded_for: true
      trusted_proxies:
        - 127.0.0.0/8
        - 10.42.0.0/16
        - 10.43.0.0/16
        - 100.64.0.0/10
        - 192.168.0.0/16
    default_config:
    frontend:
      themes: !include_dir_merge_named themes

    automation: !include automations.yaml
    script: !include scripts.yaml
    scene: !include scenes.yaml 

# Security context for the container
securityContext:
  privileged: true

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

# Addons configuration
addons:
  codeserver:
    enabled: true
    service:
      type: NodePort
      port: 30030

# Volumes configuration
volumes:
  - name: config-volume
    configMap:
      name: hass-configuration
