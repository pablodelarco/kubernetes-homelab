config:
  # Bookmarks for quick access to useful resources
  bookmarks:
    - Developer:
        - GitHub:
            - icon: github.png
              href: https://github.com/pablodelarco/kubernetes-homelab
              description: Kubernetes Homelab Repository
        - Kubernetes Docs:
            - icon: kubernetes.png
              href: https://kubernetes.io/docs/
              description: Official Kubernetes Documentation
    - Media:
        - Jellyfin Docs:
            - icon: jellyfin.png
              href: https://jellyfin.org/docs/
              description: Jellyfin Documentation
        - Radarr Wiki:
            - icon: radarr.png
              href: https://wiki.servarr.com/radarr
              description: Radarr Wiki
    - Monitoring:
        - Grafana Dashboards:
            - icon: grafana.png
              href: https://grafana.com/grafana/dashboards/
              description: Community Dashboards
        - Prometheus Docs:
            - icon: prometheus.png
              href: https://prometheus.io/docs/
              description: Prometheus Documentation

  # Services organized by category
  services:
    - Media Server:
        - Jellyfin:
            icon: jellyfin.png
            href: https://jellyfin.tabby-carp.ts.net/
            description: Media streaming server
            widget:
              type: jellyfin
              url: https://jellyfin.tabby-carp.ts.net/
              key:
                valueFrom:
                  secretKeyRef:
                    name: jellyfin-secret
                    key: JELLYFIN_API_KEY
              enableBlocks: true
              enableNowPlaying: true
              enableUser: false
              showEpisodeNumber: true
              expandOneStreamToTwoRows: false
        - Radarr:
            icon: radarr.png
            href: https://radarr.tabby-carp.ts.net/
            description: Movie collection manager
            widget:
              type: radarr
              url: https://radarr.tabby-carp.ts.net/
              key: "{{HOMEPAGE_VAR_RADARR_API_KEY}}"
        - Jackett:
            icon: jackett.png
            href: https://jackett.tabby-carp.ts.net/
            description: Indexer proxy
        - qBittorrent:
            icon: qbittorrent.png
            href: https://qbitt.tabby-carp.ts.net/
            description: Torrent client
            widget:
              type: qbittorrent
              url: https://qbitt.tabby-carp.ts.net/

    - Monitoring & Observability:
        - Grafana:
            icon: grafana.png
            href: https://grafana.tabby-carp.ts.net/
            description: Metrics & dashboards
            widget:
              type: grafana
              url: https://grafana.tabby-carp.ts.net/
              username: "{{HOMEPAGE_VAR_GRAFANA_USER}}"
              password: "{{HOMEPAGE_VAR_GRAFANA_PASSWORD}}"
        - Uptime Kuma:
            icon: uptime-kuma.png
            href: https://uptime-kuma.tabby-carp.ts.net/
            description: Uptime monitoring
            widget:
              type: uptimekuma
              url: https://uptime-kuma.tabby-carp.ts.net/
              slug: homelab

    - Infrastructure & Storage:
        - Longhorn:
            icon: longhorn.png
            href: https://longhorn.tabby-carp.ts.net/
            description: Distributed block storage
            widget:
              type: longhorn
              url: https://longhorn.tabby-carp.ts.net/
        - MinIO:
            icon: minio.png
            href: https://minio-console.tabby-carp.ts.net/
            description: S3-compatible object storage
        - MinIO API:
            icon: minio.png
            href: https://minio.tabby-carp.ts.net/
            description: MinIO S3 API endpoint

    - Home Automation & IoT:
        - Home Assistant:
            icon: homeassistant.png
            href: https://home-assistant.tabby-carp.ts.net/
            description: Home automation platform
            ping: https://home-assistant.tabby-carp.ts.net
            widget:
              type: homeassistant
              url: https://home-assistant.tabby-carp.ts.net/
              key: "{{HOMEPAGE_VAR_HOMEASSISTANT_TOKEN}}"
        - EMQX Dashboard:
            icon: emqx.png
            href: https://emqx.tabby-carp.ts.net/
            description: MQTT broker dashboard
            widget:
              type: emqx
              url: https://emqx.tabby-carp.ts.net/

  # Widgets displayed at the top of the homepage
  widgets:
    - logo:
        icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/kubernetes.png
    - greeting:
        text_size: xl
        text: "Homelab Dashboard"
    - datetime:
        text_size: xl
        format:
          dateStyle: long
          timeStyle: short
          hour12: false
    - search:
        provider: google
        target: _blank

    # Kubernetes cluster overview
    - kubernetes:
        cluster:
          show: true
          cpu: true
          memory: true
          showLabel: true
          label: "Beelink Cluster"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true

    # System resources widget
    - resources:
        backend: kubernetes
        expanded: true
        cpu: true
        memory: true

  # Kubernetes integration settings
  kubernetes:
    mode: cluster

  # General settings
  settings:
    title: "Pablo's Homelab"
    favicon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/kubernetes.png
    theme: dark
    color: slate
    headerStyle: boxed
    hideVersion: true
    layout:
      Media Server:
        style: row
        columns: 4
      Monitoring & Observability:
        style: row
        columns: 2
      Infrastructure & Storage:
        style: row
        columns: 3
      Home Automation & IoT:
        style: row
        columns: 2

# Environment variables for API keys and credentials
# These can be referenced in the config using {{HOMEPAGE_VAR_NAME}}
env:
  # Grafana credentials (update these with your actual credentials)
  - name: HOMEPAGE_VAR_GRAFANA_USER
    value: "admin"
  - name: HOMEPAGE_VAR_GRAFANA_PASSWORD
    value: "prom-operator"  # Change this to your actual Grafana password

  # Radarr API key (you'll need to get this from Radarr settings)
  - name: HOMEPAGE_VAR_RADARR_API_KEY
    value: "YOUR_RADARR_API_KEY"  # Replace with actual API key from Radarr

  # Home Assistant token (you'll need to create a long-lived access token)
  - name: HOMEPAGE_VAR_HOMEASSISTANT_TOKEN
    value: "YOUR_HOMEASSISTANT_TOKEN"  # Replace with actual token

# The service account is necessary to allow discovery of other services
serviceAccount:
  create: true
  name: homepage

# This enables the service account to access the necessary resources
enableRbac: true

ingress:
  main:
    enabled: true
    annotations:
      tailscale.com/funnel: "true"
      gethomepage.dev/enabled: "true"
    ingressClassName: tailscale
    hosts:
      - host: homepage
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - homepage

persistence:
  logs:
    enabled: true
    type: pvc
    mountPath: /app/config/logs
    accessMode: ReadWriteOnce # Specify the required access mode
    storageClass: "longhorn" # Specify your storage class
    size: 5Gi


controller:
  annotations:
    configmap-checksum: '{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}'





